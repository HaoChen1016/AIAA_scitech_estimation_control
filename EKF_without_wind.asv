function [X_k1,P_k1,L] = EKF(X,P,Q,R,param,sensor,iter)
% Performs one loop of the EKF. 
% HAO-EKF without wind

% Inputs:

%   X = State mean, m_k|k-1 (nx1)
%   P = State covariance, P_k|k-1(nxn)
%   f = State dynamics, xdot = f(x,param)
%   df = 
%   dh =
%   Q = Process Noise Covariance Matrix(nxn)
%   R = Measurement Noise Covariance Matrix (mxm)
%   param = Any parameters for f
%   iter = denotes the the first loop,1=yes,0=no

% Outputs:

%   X_k1 = state at next time step
%   P_k1 = state covariance at next time step
%parameter
A_gr = param{1};
m = param{2};
ts = param{3};
B_i = param{4};
%sensor
Y = [sensor{1};sensor{2};]; %gps+B_b
w = sensor{3};
a = sensor{4};
U={w;a}; 
%states
x_hat=X(1:3);
v_hat=X(4:6);
q_hat=X(7:10);
b3=[0;0;1];
%% time update 
    X_minus_k1 = X; %dim(X)=10x1
    P_minus_k1 = P; %dim(P)=10x10
    N=10;
    for i=1:N
    X_minus_k1 = X_minus_k1 + (ts/N).*f(X,U,param);
    
    q_hat=X_minus_k1(7:10);
    q_hat=q_hat/norm(q_hat);    
    X_minus_k1(7:10)=q_hat; %normalization
    A = df(X_minus_k1,U,param);

    q_hat=X_minus_k1(7:10);
    q0=q_hat(1);q1=q_hat(2);q2=q_hat(3);q3=q_hat(4);
    Ln22 = [- 2*q2^2 - 2*q3^2 + 1,     2*q1*q2 - 2*q0*q3,     2*q0*q2 + 2*q1*q3;
                2*q0*q3 + 2*q1*q2, - 2*q1^2 - 2*q3^2 + 1,     2*q2*q3 - 2*q0*q1;
                2*q1*q3 - 2*q0*q2,     2*q0*q1 + 2*q2*q3, - 2*q1^2 - 2*q2^2 + 1;];
    Ln33 = [-q1/2, -q2/2, -q3/2;
             q0/2, -q3/2,  q2/2;
             q3/2,  q0/2, -q1/2;
            -q2/2,  q1/2,  q0/2;];
    Ln = [    eye(3) zeros(3,3) zeros(3,3);
          zeros(3,3)      Ln22  zeros(3,3);
          zeros(4,3) zeros(4,3)       Ln33;];
%     P_minus_k1 = P_minus_k1 + (ts/N)*(A*P + P*A' + Q);
    P_minus_k1 = P_minus_k1 + (ts/N).*(A*P + P*A' + Ln*Q*Ln');
    end
    X_k1 = X_minus_k1;
    P_k1 = P_minus_k1;
    L=0;
% measurement update 
persistent num 
if isempty(num)
    num = 0;
end

    if sensor{1} ~= false
        H= dh(X_minus_k1,U,param);
        L = P_minus_k1*H'*inv(H*P_minus_k1*H' + R);
        X_k1 = X_minus_k1 + L*(Y-h(X_minus_k1,U,param));
        q_hat=X_k1(7:10);
        q_hat=q_hat/norm(q_hat);    
        X_k1(7:10)=q_hat; %normalization
        P_k1 = (eye(10)-L*H)*P_minus_k1;
        num = num +1;
        num 
    end

end

function [X_dot] = f(X,U,param)
%states
x=X(1:3);
v=X(4:6);
q=X(7:10);
%inputs
w=U{1};
a=U{2};
%parameters
A_gr = param{1};
%% system dynamics
x_dot = v;
v_dot = A_gr + quat_v(q,a,0);
q_dot = (1/2)*quat_multiply(q,[0;w]);
%% output
X_dot = [x_dot;v_dot;q_dot];
end

function [Y] = h(X,U,param)
%states
x=X(1:3);
v=X(4:6);
q=X(7:10);
%inputs
w=U{1};
a=U{2};
%parameters
A_gr = param{1};
m = param{2};
ts = param{3};
B_i = param{4};
b_3=[0;0;1];
%%
x;
B_b = quat_v(q,B_i,1);
%% ouputs
Y = [x;B_b];
end

function [dfdx] = df(X,U,param)
%states
x=X(1:3);
v=X(4:6);
q=X(7:10);

q0=q(1);q1=q(2);q2=q(3);q3=q(4);
%inputs
w=U{1};
a=U{2};
a1=a(1);a2=a(2);a3=a(3);
w1=w(1);w2=w(2);w3=w(3);
%parameters
A_gr = param{1};
m = param{2};
ts = param{3};
B_i = param{4};
b_3=[0;0;1];
% 
df1dx = zeros(3,3);
df1dv = eye(3);
df1dq = zeros(3,4);

df2dx = zeros(3,3);
df2dv = zeros(3,3);
df2dq = [2*a3*q2 - 2*a2*q3,           2*a2*q2 + 2*a3*q3, 2*a2*q1 - 4*a1*q2 + 2*a3*q0, 2*a3*q1 - 4*a1*q3 - 2*a2*q0;
         2*a1*q3 - 2*a3*q1, 2*a1*q2 - 4*a2*q1 - 2*a3*q0,           2*a1*q1 + 2*a3*q3, 2*a1*q0 - 4*a2*q3 + 2*a3*q2;
         2*a2*q1 - 2*a1*q2, 2*a2*q0 + 2*a1*q3 - 4*a3*q1, 2*a2*q3 - 2*a1*q0 - 4*a3*q2,           2*a1*q1 + 2*a2*q2];

df3dx =  zeros(3,3);   
dfdx = [df1dx df1dv df1dq;
        df2dx df2dv df2dq;
        df3dx df3dv df3dq;]; 
end

function [dhdX] = dh(X,U,param) 
%states
x=X(1:3);
v=X(4:6);
q=X(7:10);

q0=q(1);q1=q(2);q2=q(3);q3=q(4);
%inputs
w=U{1};
a=U{2};
%parameters
A_gr = param{1};
m = param{2};
ts = param{3};
B_i = param{4};
b_3=[0;0;1];

B_i1 = B_i(1);B_i2 = B_i(2);B_i3 = B_i(3);
%%
dh1dx = eye(3);
dh1dv = zeros(3,3);
dh1dq = zeros(3,4);

dh2dx = zeros(3,3);
dh2dv = zeros(3,3);
dh2dq = [(2*B_i2*(q3 + 4*q0*q1*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i3*(q2 - 4*q0*q1*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i2*(8*q0*q1^2 + 8*q0*q2^2 + 8*q0*q3^2)*(2*q0^2*q1*q2 + q0*q3 + 2*q1^3*q2 + 2*q1*q2^3 + 2*q1*q2*q3^2 - q1*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i3*(8*q0*q1^2 + 8*q0*q2^2 + 8*q0*q3^2)*(2*q0^2*q1*q3 - q0*q2 + 2*q1^3*q3 + 2*q1*q2^2*q3 + 2*q1*q3^3 - q1*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 + (8*B_i1*q0*q1^2)/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (B_i1*(8*q0*q1^2 + 8*q0*q2^2 + 8*q0*q3^2)*(4*q0^2*q1^2 + 4*q1^4 + 4*q1^2*q2^2 + 4*q1^2*q3^2 - 4*q1^2 - 2*q2^2 - 2*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2, (2*B_i2*(2*q0^2*q2 + 6*q1^2*q2 + 2*q2^3 + 2*q2*q3^2 - q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) + (2*B_i3*(2*q0^2*q3 + 6*q1^2*q3 + 2*q2^2*q3 + 2*q3^3 - q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) + (B_i1*(8*q0^2*q1 + 16*q1^3 + 8*q1*q2^2 + 8*q1*q3^2 - 8*q1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i2*(8*q0^2*q1 + 16*q1^3 + 16*q1*q2^2 + 16*q1*q3^2 - 8*q1)*(2*q0^2*q1*q2 + q0*q3 + 2*q1^3*q2 + 2*q1*q2^3 + 2*q1*q2*q3^2 - q1*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i3*(8*q0^2*q1 + 16*q1^3 + 16*q1*q2^2 + 16*q1*q3^2 - 8*q1)*(2*q0^2*q1*q3 - q0*q2 + 2*q1^3*q3 + 2*q1*q2^2*q3 + 2*q1*q3^3 - q1*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (B_i1*(8*q0^2*q1 + 16*q1^3 + 16*q1*q2^2 + 16*q1*q3^2 - 8*q1)*(4*q0^2*q1^2 + 4*q1^4 + 4*q1^2*q2^2 + 4*q1^2*q3^2 - 4*q1^2 - 2*q2^2 - 2*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2,                                                                 (2*B_i2*(2*q0^2*q1 + 2*q1^3 + 6*q1*q2^2 + 2*q1*q3^2 - q1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (B_i1*(- 8*q2*q1^2 + 4*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i3*(q0 - 4*q1*q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i2*(8*q0^2*q2 + 16*q1^2*q2 + 16*q2^3 + 16*q2*q3^2 - 8*q2)*(2*q0^2*q1*q2 + q0*q3 + 2*q1^3*q2 + 2*q1*q2^3 + 2*q1*q2*q3^2 - q1*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i3*(8*q0^2*q2 + 16*q1^2*q2 + 16*q2^3 + 16*q2*q3^2 - 8*q2)*(2*q0^2*q1*q3 - q0*q2 + 2*q1^3*q3 + 2*q1*q2^2*q3 + 2*q1*q3^3 - q1*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (B_i1*(8*q0^2*q2 + 16*q1^2*q2 + 16*q2^3 + 16*q2*q3^2 - 8*q2)*(4*q0^2*q1^2 + 4*q1^4 + 4*q1^2*q2^2 + 4*q1^2*q3^2 - 4*q1^2 - 2*q2^2 - 2*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2,                                                                 (2*B_i2*(q0 + 4*q1*q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (B_i1*(- 8*q3*q1^2 + 4*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) + (2*B_i3*(2*q0^2*q1 + 2*q1^3 + 2*q1*q2^2 + 6*q1*q3^2 - q1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i2*(8*q0^2*q3 + 16*q1^2*q3 + 16*q2^2*q3 + 16*q3^3 - 8*q3)*(2*q0^2*q1*q2 + q0*q3 + 2*q1^3*q2 + 2*q1*q2^3 + 2*q1*q2*q3^2 - q1*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i3*(8*q0^2*q3 + 16*q1^2*q3 + 16*q2^2*q3 + 16*q3^3 - 8*q3)*(2*q0^2*q1*q3 - q0*q2 + 2*q1^3*q3 + 2*q1*q2^2*q3 + 2*q1*q3^3 - q1*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (B_i1*(8*q0^2*q3 + 16*q1^2*q3 + 16*q2^2*q3 + 16*q3^3 - 8*q3)*(4*q0^2*q1^2 + 4*q1^4 + 4*q1^2*q2^2 + 4*q1^2*q3^2 - 4*q1^2 - 2*q2^2 - 2*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2;
         (2*B_i3*(q1 + 4*q0*q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i1*(q3 - 4*q0*q1*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i1*(8*q0*q1^2 + 8*q0*q2^2 + 8*q0*q3^2)*(2*q0^2*q1*q2 - q0*q3 + 2*q1^3*q2 + 2*q1*q2^3 + 2*q1*q2*q3^2 - q1*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i3*(8*q0*q1^2 + 8*q0*q2^2 + 8*q0*q3^2)*(2*q0^2*q2*q3 + q0*q1 + 2*q1^2*q2*q3 + 2*q2^3*q3 + 2*q2*q3^3 - q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 + (8*B_i2*q0*q2^2)/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (B_i2*(8*q0*q1^2 + 8*q0*q2^2 + 8*q0*q3^2)*(4*q0^2*q2^2 + 4*q1^2*q2^2 - 2*q1^2 + 4*q2^4 + 4*q2^2*q3^2 - 4*q2^2 - 2*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2,                                                                 (2*B_i3*(q0 + 4*q1*q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (B_i2*(- 8*q1*q2^2 + 4*q1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) + (2*B_i1*(2*q0^2*q2 + 6*q1^2*q2 + 2*q2^3 + 2*q2*q3^2 - q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i1*(8*q0^2*q1 + 16*q1^3 + 16*q1*q2^2 + 16*q1*q3^2 - 8*q1)*(2*q0^2*q1*q2 - q0*q3 + 2*q1^3*q2 + 2*q1*q2^3 + 2*q1*q2*q3^2 - q1*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i3*(8*q0^2*q1 + 16*q1^3 + 16*q1*q2^2 + 16*q1*q3^2 - 8*q1)*(2*q0^2*q2*q3 + q0*q1 + 2*q1^2*q2*q3 + 2*q2^3*q3 + 2*q2*q3^3 - q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (B_i2*(8*q0^2*q1 + 16*q1^3 + 16*q1*q2^2 + 16*q1*q3^2 - 8*q1)*(4*q0^2*q2^2 + 4*q1^2*q2^2 - 2*q1^2 + 4*q2^4 + 4*q2^2*q3^2 - 4*q2^2 - 2*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2, (2*B_i1*(2*q0^2*q1 + 2*q1^3 + 6*q1*q2^2 + 2*q1*q3^2 - q1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) + (2*B_i3*(2*q0^2*q3 + 2*q1^2*q3 + 6*q2^2*q3 + 2*q3^3 - q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) + (B_i2*(8*q0^2*q2 + 8*q1^2*q2 + 16*q2^3 + 8*q2*q3^2 - 8*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i1*(8*q0^2*q2 + 16*q1^2*q2 + 16*q2^3 + 16*q2*q3^2 - 8*q2)*(2*q0^2*q1*q2 - q0*q3 + 2*q1^3*q2 + 2*q1*q2^3 + 2*q1*q2*q3^2 - q1*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i3*(8*q0^2*q2 + 16*q1^2*q2 + 16*q2^3 + 16*q2*q3^2 - 8*q2)*(2*q0^2*q2*q3 + q0*q1 + 2*q1^2*q2*q3 + 2*q2^3*q3 + 2*q2*q3^3 - q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (B_i2*(8*q0^2*q2 + 16*q1^2*q2 + 16*q2^3 + 16*q2*q3^2 - 8*q2)*(4*q0^2*q2^2 + 4*q1^2*q2^2 - 2*q1^2 + 4*q2^4 + 4*q2^2*q3^2 - 4*q2^2 - 2*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2,                                                                 (2*B_i3*(2*q0^2*q2 + 2*q1^2*q2 + 2*q2^3 + 6*q2*q3^2 - q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (B_i2*(- 8*q3*q2^2 + 4*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i1*(q0 - 4*q1*q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i1*(8*q0^2*q3 + 16*q1^2*q3 + 16*q2^2*q3 + 16*q3^3 - 8*q3)*(2*q0^2*q1*q2 - q0*q3 + 2*q1^3*q2 + 2*q1*q2^3 + 2*q1*q2*q3^2 - q1*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i3*(8*q0^2*q3 + 16*q1^2*q3 + 16*q2^2*q3 + 16*q3^3 - 8*q3)*(2*q0^2*q2*q3 + q0*q1 + 2*q1^2*q2*q3 + 2*q2^3*q3 + 2*q2*q3^3 - q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (B_i2*(8*q0^2*q3 + 16*q1^2*q3 + 16*q2^2*q3 + 16*q3^3 - 8*q3)*(4*q0^2*q2^2 + 4*q1^2*q2^2 - 2*q1^2 + 4*q2^4 + 4*q2^2*q3^2 - 4*q2^2 - 2*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2;
         (2*B_i1*(q2 + 4*q0*q1*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i2*(q1 - 4*q0*q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i1*(8*q0*q1^2 + 8*q0*q2^2 + 8*q0*q3^2)*(2*q0^2*q1*q3 + q0*q2 + 2*q1^3*q3 + 2*q1*q2^2*q3 + 2*q1*q3^3 - q1*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i2*(8*q0*q1^2 + 8*q0*q2^2 + 8*q0*q3^2)*(2*q0^2*q2*q3 - q0*q1 + 2*q1^2*q2*q3 + 2*q2^3*q3 + 2*q2*q3^3 - q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 + (8*B_i3*q0*q3^2)/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (B_i3*(8*q0*q1^2 + 8*q0*q2^2 + 8*q0*q3^2)*(4*q0^2*q3^2 + 4*q1^2*q3^2 - 2*q1^2 + 4*q2^2*q3^2 - 2*q2^2 + 4*q3^4 - 4*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2,                                                                 (2*B_i1*(2*q0^2*q3 + 6*q1^2*q3 + 2*q2^2*q3 + 2*q3^3 - q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (B_i3*(- 8*q1*q3^2 + 4*q1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i2*(q0 - 4*q1*q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i1*(8*q0^2*q1 + 16*q1^3 + 16*q1*q2^2 + 16*q1*q3^2 - 8*q1)*(2*q0^2*q1*q3 + q0*q2 + 2*q1^3*q3 + 2*q1*q2^2*q3 + 2*q1*q3^3 - q1*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i2*(8*q0^2*q1 + 16*q1^3 + 16*q1*q2^2 + 16*q1*q3^2 - 8*q1)*(2*q0^2*q2*q3 - q0*q1 + 2*q1^2*q2*q3 + 2*q2^3*q3 + 2*q2*q3^3 - q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (B_i3*(8*q0^2*q1 + 16*q1^3 + 16*q1*q2^2 + 16*q1*q3^2 - 8*q1)*(4*q0^2*q3^2 + 4*q1^2*q3^2 - 2*q1^2 + 4*q2^2*q3^2 - 2*q2^2 + 4*q3^4 - 4*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2,                                                                 (2*B_i1*(q0 + 4*q1*q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (B_i3*(- 8*q2*q3^2 + 4*q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) + (2*B_i2*(2*q0^2*q3 + 2*q1^2*q3 + 6*q2^2*q3 + 2*q3^3 - q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i1*(8*q0^2*q2 + 16*q1^2*q2 + 16*q2^3 + 16*q2*q3^2 - 8*q2)*(2*q0^2*q1*q3 + q0*q2 + 2*q1^3*q3 + 2*q1*q2^2*q3 + 2*q1*q3^3 - q1*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i2*(8*q0^2*q2 + 16*q1^2*q2 + 16*q2^3 + 16*q2*q3^2 - 8*q2)*(2*q0^2*q2*q3 - q0*q1 + 2*q1^2*q2*q3 + 2*q2^3*q3 + 2*q2*q3^3 - q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (B_i3*(8*q0^2*q2 + 16*q1^2*q2 + 16*q2^3 + 16*q2*q3^2 - 8*q2)*(4*q0^2*q3^2 + 4*q1^2*q3^2 - 2*q1^2 + 4*q2^2*q3^2 - 2*q2^2 + 4*q3^4 - 4*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2, (2*B_i1*(2*q0^2*q1 + 2*q1^3 + 2*q1*q2^2 + 6*q1*q3^2 - q1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) + (2*B_i2*(2*q0^2*q2 + 2*q1^2*q2 + 2*q2^3 + 6*q2*q3^2 - q2))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) + (B_i3*(8*q0^2*q3 + 8*q1^2*q3 + 8*q2^2*q3 + 16*q3^3 - 8*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1) - (2*B_i1*(8*q0^2*q3 + 16*q1^2*q3 + 16*q2^2*q3 + 16*q3^3 - 8*q3)*(2*q0^2*q1*q3 + q0*q2 + 2*q1^3*q3 + 2*q1*q2^2*q3 + 2*q1*q3^3 - q1*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (2*B_i2*(8*q0^2*q3 + 16*q1^2*q3 + 16*q2^2*q3 + 16*q3^3 - 8*q3)*(2*q0^2*q2*q3 - q0*q1 + 2*q1^2*q2*q3 + 2*q2^3*q3 + 2*q2*q3^3 - q2*q3))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2 - (B_i3*(8*q0^2*q3 + 16*q1^2*q3 + 16*q2^2*q3 + 16*q3^3 - 8*q3)*(4*q0^2*q3^2 + 4*q1^2*q3^2 - 2*q1^2 + 4*q2^2*q3^2 - 2*q2^2 + 4*q3^4 - 4*q3^2 + 1))/(4*q0^2*q1^2 + 4*q0^2*q2^2 + 4*q0^2*q3^2 + 4*q1^4 + 8*q1^2*q2^2 + 8*q1^2*q3^2 - 4*q1^2 + 4*q2^4 + 8*q2^2*q3^2 - 4*q2^2 + 4*q3^4 - 4*q3^2 + 1)^2;];
                
%dim=           
dhdX = [dh1dx dh1dv dh1dq ;
        dh2dx dh2dv dh2dq ;];
end





